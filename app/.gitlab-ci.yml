variables:  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis tasksonarcloud-check:  image:    name: sonarsource/sonar-scanner-cli:latest    entrypoint: [""]  cache:    key: "${CI_JOB_NAME}"    paths:      - .sonar/cache  script:    - sonar-scanner  rules:    - if: $CI_COMMIT_REF_NAME == 'main' || $CI_PIPELINE_SOURCE == 'merge_request_event'#default:#  image: php:7.4-apache#  services:#    - name: mysql:5.7#      alias: mysql##cache:#  key: ${CI_COMMIT_REF_SLUG}#  paths:#    - vendor/##variables:#  MYSQL_ROOT_PASSWORD: secret#  MYSQL_DATABASE: fablab_db#  MYSQL_USER: fablab_user#  MYSQL_PASSWORD: fablab_pwd#  # symfony 4#  DATABASE_URL: mysql://fablab_user:fablab_pwd@mysql:3306/fablab_db##  # symfony 3.2+#  TEST_DATABASE_PORT: 3306#  TEST_DATABASE_HOST: mysql##static_analysis:#  stage: analysis#  script:#    - sh scripts/ci-php-install.sh#    - php bin/composer.phar require --dev phpstan/phpstan#    - php vendor/bin/phpstan.phar analyse src --level=1##phpunit:#  stage: test#  script:#    - sh scripts/ci-php-install.sh#    - php bin/composer.phar install -o#    - php bin/composer.phar require --dev symfony/phpunit-bridge#    - sh scripts/php_test_run.sh##sonarqube-check:#  stage: analysis#  image:#    name: sonarsource/sonar-scanner-cli:latest#    entrypoint: [""]#  variables:#    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache#    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task#  cache:#    key: "${CI_JOB_NAME}"#    paths:#      - .sonar/cache#  script:#    - cat /opt/sonar-scanner/conf/sonar-scanner.properties#    - pwd#    - ls#    - sonar-scanner -Dsonar.qualitygate.wait=true#  allow_failure: true#  when: manual##deployment:#  stage: deploy#  type: deploy#  environment:#    name: staging#    url: example.com#  script:#    - sh scripts/install-git.sh#  when: manual##stages:#  - analysis#  - test#  - deploy