image: jakzal/phpqa:php8.2stages:  - code_quality  - security  - testvariables:  MYSQL_ROOT_PASSWORD: secret  MYSQL_DATABASE: fablab_db  MYSQL_USER: fablab_user  MYSQL_PASSWORD: fablab_pwdservices:  - mysql:5.7before_script:  - cd app  - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scriptscache:  paths:    - vendor/code_quality:  stage: code_quality  script:    - phpstan analyse src --level 1    - phpcs --standard=PSR12 src || true    - echo "Running PHPCBF..."    - phpcbf --standard=PSR12 src || echo "PHPCBF failed or made no changes."    - echo "PHPCBF run completed."security:  stage: security  script:    - local-php-security-checker --path=composer.lockphpunit:  image: php:8.2  stage: test  services:    - name: mysql:5.7      alias: mysql  before_script:    - apt-get update && apt-get install -y libzip-dev zlib1g-dev git unzip && docker-php-ext-install zip pdo_mysql    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer    - composer install    - cp .env.test .env    - php bin/console doctrine:database:create --env=test    - php bin/console doctrine:schema:update --force --env=test  script:    - php bin/phpunit#stages:#  - SecurityChecker#  - CodingStandars#  - UnitTests##security-checker:#  stage: SecurityChecker#  script:#    - security-checker security:check composer.lock#  allow_failure: false##phpcs:#  stage: CodingStandars#  script:#    - phpcs -v --standard=PSR12 --ignore=./src/Kernel.php ./src#  allow_failure: false##phpstan:#  stage: CodingStandars#  script:#    - phpstan analyse ./src#  allow_failure: false#twig-lint:#  stage: CodingStandards#  script:#    - twig-lint lint ./templates#  allow_failure: false#phpunit:#  stage: UnitTests#  script:#    - php bin/phpunit#  allow_failure: false